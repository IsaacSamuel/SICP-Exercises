; The sine of an angle (specified in radians) can be computed by making use of the approximation sin x ~= x if x is
;   suffeciently small, and the trigonometric identity: 
;   sin(x) - 2sun(x/3) - 4sin^3(x/3)
;   to reduce the size of the argument of sin. (For purposes of this excersise, in angle is considered "suffeciently small")
;   if its magnitude is not greater than 0.1 radians.) These ideas are incorporated in the following procedures:


; Finds the absolute value of a given x
(define (abs x) 
	(if (< x 0) (- x) x)
)

; Cube of x
(define (cube x)
	(* x x x)
)   

(define (p x)
	(- 
		(* 3 x)
		(* 4 (cube x))
	)
)

(define (sine angle)
	(if (not (> (abs angle) .1))
		angle
		(p (sine (/ angle 3.0)))
	)
)


; A) How many times is the procedure p applied when sine 12.15 is evaluated?

; (sine 12.5)
; p (sine(4.17))
; p (p (sine(1.38)))
; p (p ( p (sine(.46)))
; p (p ( p (p (sine(.154))))
; p (p (p (p p( (.05)))


; The function p is applied 5 times.

; B) What is the order of growth in space and number of steps (as a function of a) used by the process generated by 
;      the sine procedue when (sine a) is evaluated?


; Initial thoughts: order of growth in space is definitely larger than constant, because this is a recursive problem
;   that defers operation. An iterative version might take constant spece.

; Is an angle ever going to be larger than 360? If it was, couldn't we just apply a % 360 and find the sine of that?
;   That puts a hard cap on our orders of growth, but nothing in the abstraction technically prevents it, so let's continue
;   for the sake of argument.

; Computation-wise, the number of steps this function will take depends on how many times a needs to get divided by 3
;   in order to fall below the .1 threshold. In mathermatical terms:
;   
;   a/(3^n) < .1
;
; We can rewrite this as 10a < 3^n. Again this can be rewritten as, 10log(a) < nlog(3). Finally, 10log(a)/log(3) < a.
;   This proves that the order of growth of the problem is logarithmic. 
